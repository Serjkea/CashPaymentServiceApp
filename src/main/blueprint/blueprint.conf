blueprint {
    streamlets {
        file-payments-ingress = cashpaymentservice.FilePaymentsIngress
        participant-initialize-ingress = cashpaymentservice.ParticipantInitializeIngress
        payment-processing-streamlet = cashpaymentservice.PaymentProcessingStreamlet
        payment-checking-streamlet = cashpaymentservice.PaymentCheckingStreamlet
        payment-logging-egress = cashpaymentservice.PaymentLoggingEgress
    }
    topics {
        payments {
            producers = [file-payments-ingress.payments-out]
            consumers = [payment-checking-streamlet.payments-in]
        }
        participants {
            producers = [participant-initialize-ingress.participants-out]
            consumers = [payment-processing-streamlet.participants-in]
        }
        valid-payments {
            producers = [payment-checking-streamlet.valid-payments-out]
            consumers = [payment-processing-streamlet.valid-payments-in]
        }
        payment-checking-status {
            producers = [payment-checking-streamlet.check-status-out]
            consumers = [payment-logging-egress.check-status-in]
        }
        payment-processing-status {
            producers = [payment-processing-streamlet.process-status-out]
            consumers = [payment-logging-egress.process-status-in]
        }
    }
}